{"version":3,"sources":["axios.ts","modules/alert.ts","utils/setAuthToken.ts","modules/profile.ts","modules/auth.ts","components/layout/Navbar.tsx","components/layout/Landing.tsx","components/auth/Register.tsx","components/auth/Login.tsx","components/layout/Alert.tsx","img/spinner.gif","components/layout/Spinner.tsx","components/dashboard/DashboardAction.tsx","components/dashboard/Education.tsx","components/dashboard/Experience.tsx","components/dashboard/Dashboard.tsx","components/routing/PrivateRoute.tsx","components/profile-forms/CreateProfile.tsx","components/profile-forms/EditProfile.tsx","components/profile-forms/AddExperience.tsx","components/profile-forms/AddEducation.tsx","components/profiles/ProfileItem.tsx","components/profiles/Profiles.tsx","components/profile/ProfileAbout.tsx","components/profile/ProfileEducation.tsx","components/profile/ProfileExperience.tsx","components/profile/ProfileGithub.tsx","components/profile/ProfileTop.tsx","components/profile/Profile.tsx","modules/post.ts","components/post/PostForm.tsx","components/post/PostItem.tsx","components/post/Posts.tsx","components/post/CommentForm.tsx","components/post/CommentItem.tsx","components/post/Post.tsx","App.tsx","modules/index.ts","store.tsx","index.tsx"],"names":["instance","axios","create","baseURL","headers","SET_ALERT","REMOVE_ALERT","setAlert","msg","alertType","timeout","dispatch","a","id","uuidv4","type","payload","setTimeout","removeAlert","initialState","alertReducer","state","action","filter","alert","setAuthToken","token","defaults","common","GET_PROFILE","GET_PROFILES","PROFILE_ARROR","CLEAR_PROFILE","UPDATE_PROFILE","GET_REPOS","profile","profiles","repos","loading","error","getCurrentProfile","get","res","data","response","statusText","status","clearProfile","createProfile","formData","edit","history","post","push","errors","message","Array","isArray","forEach","addExperience","put","addEducation","profileReducer","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","ACCOUNT_DELETED","localStorage","getItem","isAuthenticated","user","loadUser","console","log","register","name","email","password","body","JSON","stringify","login","dispatchAccountDeleted","authReducer","setItem","removeItem","Navbar","useDispatch","useSelector","auth","authLinks","to","className","onClick","href","guestLinks","Landing","Register","useState","password2","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","Login","Alert","alerts","length","map","Spinner","src","spinner","style","width","margin","display","alt","DashboardActions","Education","educations","education","edu","school","degree","format","from","_id","delete","Experience","experiences","experience","exp","company","title","Dashboard","useEffect","window","confirm","PrivateRoute","Component","rest","render","props","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","CreateProfile","displaySocialInputs","toggleSocialInputs","EditProfile","AddExperience","current","description","toDateDisabled","toggleDisabled","required","checked","disabled","AddEducation","fieldofstudy","ProfileItem","avatar","slice","skill","index","Profiles","ProfileAbout","trim","split","ProfileEducation","ProfileExperience","ProfileGithub","username","getGithubRepos","html_url","rel","stargazers_count","watchers_count","forks_count","ProfileTop","social","Profile","match","params","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","posts","postReducer","post_id","likes","comments","comment","PostForm","text","setText","PostItem","showActions","date","Posts","CommentForm","addComment","CommentItem","comment_id","deleteComment","Post","App","exact","path","component","combineReducers","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.070145e9.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://devconnector-dj.herokuapp.com',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport default instance;\n","import { ThunkAction } from 'redux-thunk';\nimport { v4 as uuidv4 } from 'uuid';\nimport { rootState } from '.';\n\n// Action name\nconst SET_ALERT = 'SET_ALERT' as const;\nconst REMOVE_ALERT = 'REMOVE_ALERT' as const;\n\n// Action type\ntype AlertAction =\n  | { type: typeof SET_ALERT; payload: AlertState }\n  | { type: typeof REMOVE_ALERT; id: string };\n\n// Action Creator\nexport const setAlert = (\n  msg: string,\n  alertType: string,\n  timeout = 5000\n): ThunkAction<void, rootState, null, AlertAction> => async (dispatch) => {\n  const id: string = uuidv4();\n  dispatch({\n    type: SET_ALERT,\n    payload: { msg, alertType, id },\n  });\n\n  setTimeout(() => dispatch(removeAlert(id)), timeout);\n};\nexport const removeAlert = (id: string) => ({\n  type: REMOVE_ALERT,\n  id,\n});\n\n// State type\nexport type AlertState = {\n  id: string;\n  msg: string;\n  alertType: string;\n};\nconst initialState: AlertState[] = [];\n\n// Reducer\nfunction alertReducer(\n  state: AlertState[] = initialState,\n  action: AlertAction\n): AlertState[] {\n  switch (action.type) {\n    case SET_ALERT:\n      return [...state, action.payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== action.id);\n    default:\n      return state;\n  }\n}\n\nexport default alertReducer;\n","import axios from '../axios';\n\nconst setAuthToken = (token: string) => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n};\n\nexport default setAuthToken;\n","import { RouteComponentProps } from 'react-router-dom';\nimport { ThunkAction } from 'redux-thunk';\nimport { rootState } from '.';\nimport axios from '../axios';\nimport { EduFormData } from '../components/profile-forms/AddEducation';\nimport { ExpFormData } from '../components/profile-forms/AddExperience';\nimport { FormData } from '../components/profile-forms/CreateProfile';\nimport { setAlert } from './alert';\nimport { dispatchAccountDeleted } from './auth';\n\nconst GET_PROFILE = 'GET_PROFILE' as const;\nconst GET_PROFILES = 'GET_PROFILES' as const;\nconst PROFILE_ARROR = 'PROFILE_ARROR' as const;\nconst CLEAR_PROFILE = 'CLEAR_PROFILE' as const;\nconst UPDATE_PROFILE = 'UPDATE_PROFILE' as const;\nconst GET_REPOS = 'GET_REPOS' as const;\n\n// Action type\ntype ProfileAction =\n  | { type: typeof GET_PROFILE; payload: any }\n  | {\n      type: typeof PROFILE_ARROR;\n      payload: {\n        msg: string;\n        status: number;\n      };\n    }\n  | { type: typeof CLEAR_PROFILE }\n  | { type: typeof UPDATE_PROFILE; payload: any }\n  | { type: typeof GET_PROFILES; payload: any }\n  | { type: typeof GET_REPOS; payload: any };\n\nexport type Experience = {\n  current: boolean;\n  _id: string;\n  title: string;\n  company: string;\n  location: string;\n  from: string;\n  to: string | null;\n  description: string;\n};\n\nexport type Education = {\n  _id: string;\n  current: boolean;\n  school: string;\n  degree: string;\n  fieldofstudy: string;\n  from: string;\n  to: string;\n  description: string;\n};\n\nexport type Profile = {\n  company: string;\n  user: {\n    _id: string;\n    name: string;\n    avatar: string;\n  };\n  website: string;\n  location: string;\n  status: string;\n  skills: any;\n  githubusername: string;\n  bio: string;\n  social: {\n    youtube: string | null;\n    twitter: string | null;\n    instagram: string | null;\n    linkedin: string | null;\n    facebook: string | null;\n  } | null;\n  twitter: string;\n  facebook: string;\n  linkedin: string;\n  youtube: string;\n  instagram: string;\n  experience: [Experience];\n  education: [Education];\n};\n\n// State type\nexport type ProfileState = {\n  profile: Profile | null;\n  profiles: [];\n  repos: [];\n  loading: boolean;\n  error: any;\n};\n\nconst initialState: ProfileState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {},\n};\n\n/*Action Creator*/\n\n// Get current profile\nexport const getCurrentProfile = (): ThunkAction<\n  void,\n  rootState,\n  null,\n  ProfileAction\n> => async (dispatch) => {\n  try {\n    const res = await axios.get('/profile/me');\n\n    dispatch({ type: GET_PROFILE, payload: res.data });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ARROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Get All profiles\nexport const getProfiles = (): ThunkAction<\n  void,\n  rootState,\n  null,\n  ProfileAction\n> => async (dispatch) => {\n  try {\n    dispatch(clearProfile());\n\n    const res = await axios.get('/profile');\n\n    dispatch({ type: GET_PROFILES, payload: res.data });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ARROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Get profile by id\nexport const getProfileById = (\n  id: string\n): ThunkAction<void, rootState, null, ProfileAction> => async (dispatch) => {\n  try {\n    const res = await axios.get(`/profile/user/${id}`);\n\n    dispatch({ type: GET_PROFILE, payload: res.data });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ARROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Get github repos\nexport const getGithubRepos = (\n  username: string\n): ThunkAction<void, rootState, null, ProfileAction> => async (dispatch) => {\n  try {\n    const res = await axios.get(`/profile/github/${username}`);\n\n    dispatch({ type: GET_REPOS, payload: res.data });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ARROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Clear profile\nexport const clearProfile = (): ThunkAction<\n  void,\n  rootState,\n  null,\n  ProfileAction\n> => async (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE });\n};\n\ninterface Props extends RouteComponentProps {}\n\n// Create or Update profile\nexport const createProfile = (\n  formData: FormData,\n  edit: boolean = false,\n  { history }: Props\n): ThunkAction<void, rootState, null, ProfileAction> => async (dispatch) => {\n  try {\n    const res = await axios.post('/profile', formData);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.message;\n\n    if (errors) {\n      if (Array.isArray(errors)) {\n        errors.forEach((error: string) => dispatch(setAlert(error, 'danger')));\n      } else {\n        dispatch(setAlert(errors, 'danger'));\n      }\n    }\n\n    dispatch({\n      type: PROFILE_ARROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Add Experience\nexport const addExperience = (\n  formData: ExpFormData,\n  { history }: Props\n): ThunkAction<void, rootState, null, ProfileAction> => async (dispatch) => {\n  try {\n    const res = await axios.put('/profile/experience', formData);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Experience Added', 'success'));\n\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.message;\n\n    if (errors) {\n      if (Array.isArray(errors)) {\n        errors.forEach((error: string) => dispatch(setAlert(error, 'danger')));\n      } else {\n        dispatch(setAlert(errors, 'danger'));\n      }\n    }\n\n    dispatch({\n      type: PROFILE_ARROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Add Education\nexport const addEducation = (\n  formData: EduFormData,\n  { history }: Props\n): ThunkAction<void, rootState, null, ProfileAction> => async (dispatch) => {\n  try {\n    const res = await axios.put('/profile/education', formData);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Education Added', 'success'));\n\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.message;\n\n    if (errors) {\n      if (Array.isArray(errors)) {\n        errors.forEach((error: string) => dispatch(setAlert(error, 'danger')));\n      } else {\n        dispatch(setAlert(errors, 'danger'));\n      }\n    }\n\n    dispatch({\n      type: PROFILE_ARROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Delete experience\nexport const deleteExperience = (\n  id: string\n): ThunkAction<void, rootState, null, ProfileAction> => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/profile/experience/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    const errors = err.response.data.message;\n\n    if (errors) {\n      if (Array.isArray(errors)) {\n        errors.forEach((error: string) => dispatch(setAlert(error, 'danger')));\n      } else {\n        dispatch(setAlert(errors, 'danger'));\n      }\n    }\n\n    dispatch({\n      type: PROFILE_ARROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Delete education\nexport const deleteEducation = (\n  id: string\n): ThunkAction<void, rootState, null, ProfileAction> => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/profile/education/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (err) {\n    const errors = err.response.data.message;\n\n    if (errors) {\n      if (Array.isArray(errors)) {\n        errors.forEach((error: string) => dispatch(setAlert(error, 'danger')));\n      } else {\n        dispatch(setAlert(errors, 'danger'));\n      }\n    }\n\n    dispatch({\n      type: PROFILE_ARROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Delete account & profile\nexport const deleteAccount = (): ThunkAction<\n  void,\n  rootState,\n  null,\n  ProfileAction\n> => async (dispatch) => {\n  if (window.confirm('Are you sure? This can NOT be undone!')) {\n    try {\n      await axios.delete(`/profile`);\n\n      dispatch({ type: CLEAR_PROFILE });\n      dispatch(dispatchAccountDeleted());\n\n      dispatch(setAlert('Your Account has been permanantly deleted', ''));\n    } catch (err) {\n      const errors = err.response.data.message;\n\n      if (errors) {\n        if (Array.isArray(errors)) {\n          errors.forEach((error: string) =>\n            dispatch(setAlert(error, 'danger'))\n          );\n        } else {\n          dispatch(setAlert(errors, 'danger'));\n        }\n      }\n\n      dispatch({\n        type: PROFILE_ARROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status,\n        },\n      });\n    }\n  }\n};\n\n/* Reducer */\nfunction profileReducer(\n  state: ProfileState = initialState,\n  action: ProfileAction\n) {\n  switch (action.type) {\n    case GET_PROFILE:\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        profile: action.payload,\n        loading: false,\n        error: null,\n      };\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: action.payload,\n        loading: false,\n      };\n    case GET_REPOS:\n      return {\n        ...state,\n        loading: false,\n        repos: action.payload,\n      };\n    case PROFILE_ARROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n        profile: null,\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        repos: [],\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default profileReducer;\n","import axios from '../axios';\nimport { ThunkAction } from 'redux-thunk';\nimport { rootState } from '.';\nimport { setAlert } from './alert';\nimport setAuthToken from '../utils/setAuthToken';\nimport { clearProfile } from './profile';\n\nconst REGISTER_SUCCESS = 'REGISTER_SUCCESS' as const;\nconst REGISTER_FAIL = 'REGISTER_FAIL' as const;\nconst USER_LOADED = 'USER_LOADED' as const;\nconst AUTH_ERROR = 'AUTH_ERROR' as const;\nconst LOGIN_SUCCESS = 'LOGIN_SUCCESS' as const;\nconst LOGIN_FAIL = 'LOGIN_FAIL' as const;\nconst LOGOUT = 'LOGOUT' as const;\nconst ACCOUNT_DELETED = 'ACCOUNT_DELETED' as const;\n\nexport type AuthState = {\n  token: string | null;\n  isAuthenticated: boolean | null;\n  loading: boolean;\n  user: any;\n};\n\nconst initialState: AuthState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n};\n\n// Action type\ntype AuthAction =\n  | { type: typeof REGISTER_SUCCESS; payload: { token: string } }\n  | { type: typeof REGISTER_FAIL }\n  | { type: typeof USER_LOADED; payload: any }\n  | { type: typeof AUTH_ERROR }\n  | { type: typeof LOGIN_SUCCESS; payload: any }\n  | { type: typeof LOGIN_FAIL }\n  | { type: typeof LOGOUT }\n  | { type: typeof ACCOUNT_DELETED };\n\n/* Action Creators */\n\n// Load User\nexport const loadUser = (): ThunkAction<\n  void,\n  rootState,\n  null,\n  AuthAction\n> => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/auth');\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log(err.response.data.message);\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n// Register User\nexport const register = (\n  name: string,\n  email: string,\n  password: string\n): ThunkAction<void, rootState, null, AuthAction> => async (dispatch) => {\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post('/users', body);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(loadUser());\n\n    console.log('Register Success');\n  } catch (err) {\n    const errors = err.response.data.message;\n    console.log(errors);\n    if (errors) {\n      if (Array.isArray(errors)) {\n        errors.forEach((error: string) => dispatch(setAlert(error, 'danger')));\n      } else {\n        dispatch(setAlert(errors, 'danger'));\n      }\n    }\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n// Login User\nexport const login = (\n  email: string,\n  password: string\n): ThunkAction<void, rootState, null, AuthAction> => async (dispatch) => {\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post('/auth', body);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(loadUser());\n    console.log('Login Success');\n  } catch (err) {\n    const errors = err.response.data.message;\n    console.log(errors);\n    if (errors) {\n      if (Array.isArray(errors)) {\n        errors.forEach((error: string) => dispatch(setAlert(error, 'danger')));\n      } else {\n        dispatch(setAlert(errors, 'danger'));\n      }\n    }\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\n// Logout\nexport const logout = (): ThunkAction<\n  void,\n  rootState,\n  null,\n  AuthAction\n> => async (dispatch) => {\n  dispatch({ type: LOGOUT });\n  dispatch(clearProfile());\n};\n\nexport const dispatchAccountDeleted = (): ThunkAction<\n  void,\n  rootState,\n  null,\n  AuthAction\n> => async (dispatch) => {\n  dispatch({ type: ACCOUNT_DELETED });\n};\n\n/*Reducer*/\nfunction authReducer(\n  state: AuthState = initialState,\n  action: AuthAction\n): AuthState {\n  switch (action.type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload,\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      const { payload } = action;\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n    case ACCOUNT_DELETED:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default authReducer;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { rootState } from '../../modules';\nimport { logout } from '../../modules/auth';\n\ninterface Props {}\n\nexport const Navbar: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const { isAuthenticated } = useSelector((state: rootState) => state.auth);\n\n  const authLinks = (\n    <ul>\n      <li>\n        <Link to=\"/profiles\">Developers</Link>\n      </li>\n      <li>\n        <Link to=\"/posts\">Posts</Link>\n      </li>\n      <li>\n        <Link to=\"/dashboard\">\n          <i className=\"fas fa-user\"></i>{' '}\n          <span className=\"hide-sm\">Dashboard</span>\n        </Link>\n      </li>\n      <li>\n        <a onClick={() => dispatch(logout())} href=\"#!\">\n          <i className=\"fas fa-sign-out-alt\"></i>{' '}\n          <span className=\"hide-sm\">Logout</span>\n        </a>\n      </li>\n    </ul>\n  );\n  const guestLinks = (\n    <ul>\n      <li>\n        <Link to=\"/profiles\">Developers</Link>\n      </li>\n      <li>\n        <Link to=\"/register\">Register</Link>\n      </li>\n      <li>\n        <Link to=\"/login\">Login</Link>\n      </li>\n    </ul>\n  );\n  return (\n    <nav className=\"navbar bg-dark\">\n      <h1>\n        <Link to=\"/\">\n          <i className=\"fas fa-code\"></i> DevConnector\n        </Link>\n      </h1>\n      {<>{isAuthenticated ? authLinks : guestLinks}</>}\n    </nav>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { rootState } from '../../modules';\n\ninterface Props {}\n\nexport const Landing: React.FC<Props> = () => {\n  const isAuthenticated = useSelector(\n    (state: rootState) => state.auth.isAuthenticated\n  );\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n  return (\n    <section className=\"landing\">\n      <div className=\"dark-overlay\">\n        <div className=\"landing-inner\">\n          <h1 className=\"x-large\">Developer Connector</h1>\n          <p className=\"lead\">\n            Create a developer profile/portfolio, share posts and get help from\n            other developers\n          </p>\n          <div className=\"buttons\">\n            <Link to=\"/register\" className=\"btn btn-primary\">\n              Sign Up\n            </Link>\n            <Link to=\"/login\" className=\"btn btn-light\">\n              Login\n            </Link>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { rootState } from '../../modules';\nimport { setAlert } from '../../modules/alert';\nimport { register } from '../../modules/auth';\n\ninterface Props {}\n\ninterface FormData {\n  name: string;\n  email: string;\n  password: string;\n  password2: string;\n}\n\nexport const Register: React.FC<Props> = () => {\n  const isAuthenticated = useSelector(\n    (state: rootState) => state.auth.isAuthenticated\n  );\n  const dispatch = useDispatch();\n\n  const [formData, setFormData] = useState<FormData>({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      dispatch(setAlert('Passwords do not match', 'danger'));\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <>\n      <h1 className=\"large text-primary\">Sign Up</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Create Your Account\n      </p>\n      <form className=\"form\" onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            name=\"name\"\n            value={name}\n            onChange={onChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"email\"\n            placeholder=\"Email Address\"\n            name=\"email\"\n            value={email}\n            onChange={onChange}\n          />\n          <small className=\"form-text\">\n            This site uses Gravatar so if you want a profile image, use a\n            Gravatar email\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={password}\n            onChange={onChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            name=\"password2\"\n            value={password2}\n            onChange={onChange}\n          />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n      </form>\n      <p className=\"my-1\">\n        Already have an account? <Link to=\"/login\">Sign In</Link>\n      </p>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { rootState } from '../../modules';\nimport { login } from '../../modules/auth';\n\ninterface Props {}\n\ninterface FormData {\n  email: string;\n  password: string;\n}\n\nexport const Login: React.FC<Props> = () => {\n  const isAuthenticated = useSelector(\n    (state: rootState) => state.auth.isAuthenticated\n  );\n  const dispatch = useDispatch();\n  const [formData, setFormData] = useState<FormData>({\n    email: '',\n    password: '',\n  });\n\n  const { email, password } = formData;\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  // Redirect if logged in\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <>\n      <h1 className=\"large text-primary\">Sign In</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Sign in to your Account\n      </p>\n      <form className=\"form\" onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <input\n            type=\"email\"\n            placeholder=\"Email Address\"\n            name=\"email\"\n            value={email}\n            onChange={onChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={password}\n            onChange={onChange}\n          />\n        </div>\n\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\n      </form>\n      <p className=\"my-1\">\n        Don't have an account? <Link to=\"/register\">Sign Up</Link>\n      </p>\n    </>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { rootState } from '../../modules';\n\ninterface Props {}\n\nexport const Alert: React.FC<Props> | any = () => {\n  const alerts = useSelector((state: rootState) => state.alert);\n  return (\n    alerts !== null &&\n    alerts.length > 0 &&\n    alerts.map((alert) => (\n      <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n        {alert.msg}\n      </div>\n    ))\n  );\n};\n","export default __webpack_public_path__ + \"static/media/spinner.4cfde298.gif\";","import React from 'react';\nimport spinner from '../../img/spinner.gif';\ninterface Props {}\n\nexport const Spinner: React.FC<Props> = () => {\n  return (\n    <img\n      src={spinner}\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n      alt=\"Loading...\"\n    />\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface Props {}\n\nexport const DashboardActions: React.FC<Props> = () => {\n  return (\n    <div className=\"dash-buttons\">\n      <Link to=\"/edit-profile\" className=\"btn btn-light\">\n        <i className=\"fas fa-user-circle text-primary\"></i> Edit Profile\n      </Link>\n      <Link to=\"/add-experience\" className=\"btn btn-light\">\n        <i className=\"fab fa-black-tie text-primary\"></i> Add Experience\n      </Link>\n      <Link to=\"/add-education\" className=\"btn btn-light\">\n        <i className=\"fas fa-graduation-cap text-primary\"></i> Add Education\n      </Link>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { rootState } from '../../modules';\nimport Moment from 'react-moment';\nimport { deleteEducation } from '../../modules/profile';\n\ninterface Props {}\n\nexport const Education: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const education = useSelector(\n    (state: rootState) => state.profile.profile?.education\n  );\n\n  const educations = education!.map((edu: any) => (\n    <tr key={edu._id}>\n      <td>{edu.school}</td>\n      <td className=\"hide-sm\">{edu.degree}</td>\n      <td>\n        <Moment format=\"YYYY/MM/DD\">{edu.from}</Moment> -{' '}\n        {edu.to === null ? (\n          ' Now'\n        ) : (\n          <Moment format=\"YYYY/MM/DD\">{edu.to}</Moment>\n        )}\n      </td>\n      <td>\n        <button\n          onClick={() => dispatch(deleteEducation(edu._id))}\n          className=\"btn btn-danger\"\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  ));\n  return (\n    <>\n      <h2 className=\"my-2\">Education Credentials</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>School</th>\n            <th className=\"hide-sm\">Degree</th>\n            <th className=\"hide-sm\">Years</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>{educations}</tbody>\n      </table>\n    </>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { rootState } from '../../modules';\nimport Moment from 'react-moment';\nimport { deleteExperience } from '../../modules/profile';\n\ninterface Props {}\n\nexport const Experience: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const experience = useSelector(\n    (state: rootState) => state.profile.profile!.experience\n  );\n\n  const experiences = experience.map((exp: any) => (\n    <tr key={exp._id}>\n      <td>{exp.company}</td>\n      <td className=\"hide-sm\">{exp.title}</td>\n      <td>\n        <Moment format=\"YYYY/MM/DD\">{exp.from}</Moment> -{' '}\n        {exp.to === null ? (\n          ' Now'\n        ) : (\n          <Moment format=\"YYYY/MM/DD\">{exp.to}</Moment>\n        )}\n      </td>\n      <td>\n        <button\n          onClick={() => dispatch(deleteExperience(exp._id))}\n          className=\"btn btn-danger\"\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  ));\n  return (\n    <>\n      <h2 className=\"my-2\">Experience Credentials</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>Company</th>\n            <th className=\"hide-sm\">Title</th>\n            <th className=\"hide-sm\">Years</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>{experiences}</tbody>\n      </table>\n    </>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { rootState } from '../../modules';\nimport { deleteAccount, getCurrentProfile } from '../../modules/profile';\nimport { Spinner } from '../layout/Spinner';\nimport { DashboardActions } from './DashboardAction';\nimport { Education } from './Education';\nimport { Experience } from './Experience';\n\ninterface Props {}\n\nexport const Dashboard: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const { user } = useSelector((state: rootState) => state.auth);\n  const { profile, loading } = useSelector((state: rootState) => state.profile);\n\n  useEffect(() => {\n    dispatch(getCurrentProfile());\n  }, [dispatch]);\n\n  return loading && profile === null ? (\n    <Spinner />\n  ) : (\n    <>\n      <h1 className=\"large text-primary\">Dashboard</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Welcome {user && user.name}\n      </p>\n      {profile !== null ? (\n        <>\n          <DashboardActions />\n          <Experience />\n          <Education />\n          <div className=\"my-2\">\n            <button\n              className=\"btn btn-danger\"\n              onClick={() => dispatch(deleteAccount())}\n            >\n              <i className=\"fas fa-user-minus\"></i>Delete My Account\n            </button>\n          </div>\n        </>\n      ) : (\n        <>\n          <p>You have not yet setup a profile, please add some info</p>\n          <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\n            Create Profile\n          </Link>\n        </>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\nimport { rootState } from '../../modules';\nimport { Spinner } from '../layout/Spinner';\n\nexport const PrivateRoute: React.FC<any> = ({ Component, ...rest }) => {\n  const { isAuthenticated, loading } = useSelector(\n    (state: rootState) => state.auth\n  );\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        loading ? (\n          <Spinner />\n        ) : isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { createProfile } from '../../modules/profile';\n\ninterface Props extends RouteComponentProps {}\n\nexport type FormData = {\n  company: string;\n  website: string;\n  location: string;\n  status: string;\n  skills: string;\n  githubusername: string;\n  bio: string;\n  twitter: string;\n  facebook: string;\n  linkedin: string;\n  youtube: string;\n  instagram: string;\n};\n\nconst initialState: FormData = {\n  company: '',\n  website: '',\n  location: '',\n  status: '',\n  skills: '',\n  githubusername: '',\n  bio: '',\n  twitter: '',\n  facebook: '',\n  linkedin: '',\n  youtube: '',\n  instagram: '',\n};\n\nexport const CreateProfile: React.FC<Props> = (props) => {\n  const [formData, setFormData] = useState<FormData>(initialState);\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const [displaySocialInputs, toggleSocialInputs] = useState<boolean>(false);\n  const dispatch = useDispatch();\n  const onChange = (\n    e: React.ChangeEvent<\n      HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement\n    >\n  ) => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    dispatch(createProfile(formData, false, props));\n  };\n\n  return (\n    <>\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={onChange}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\">\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Company\"\n            name=\"company\"\n            value={company}\n            onChange={onChange}\n          />\n          <small className=\"form-text\">\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Website\"\n            name=\"website\"\n            value={website}\n            onChange={onChange}\n          />\n          <small className=\"form-text\">\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            value={location}\n            onChange={onChange}\n          />\n          <small className=\"form-text\">\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Skills\"\n            name=\"skills\"\n            value={skills}\n            onChange={onChange}\n          />\n          <small className=\"form-text\">\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername}\n            onChange={onChange}\n          />\n          <small className=\"form-text\">\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            placeholder=\"A short bio of yourself\"\n            name=\"bio\"\n            value={bio}\n            onChange={onChange}\n          ></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n        {displaySocialInputs && (\n          <>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Twitter URL\"\n                name=\"twitter\"\n                value={twitter}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Facebook URL\"\n                name=\"facebook\"\n                value={facebook}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"YouTube URL\"\n                name=\"youtube\"\n                value={youtube}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Linkedin URL\"\n                name=\"linkedin\"\n                value={linkedin}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Instagram URL\"\n                name=\"instagram\"\n                value={instagram}\n                onChange={onChange}\n              />\n            </div>\n          </>\n        )}\n\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { rootState } from '../../modules';\nimport { createProfile, getCurrentProfile } from '../../modules/profile';\n\ninterface Props extends RouteComponentProps {}\n\nexport type FormData = {\n  company: string;\n  website: string;\n  location: string;\n  status: string;\n  skills: string;\n  githubusername: string;\n  bio: string;\n  twitter: string;\n  facebook: string;\n  linkedin: string;\n  youtube: string;\n  instagram: string;\n};\n\nconst initialState: FormData = {\n  company: '',\n  website: '',\n  location: '',\n  status: '',\n  skills: '',\n  githubusername: '',\n  bio: '',\n  twitter: '',\n  facebook: '',\n  linkedin: '',\n  youtube: '',\n  instagram: '',\n};\n\nexport const EditProfile: React.FC<Props> = (props) => {\n  const dispatch = useDispatch();\n  const { profile, loading } = useSelector((state: rootState) => state.profile);\n  const [formData, setFormData] = useState<FormData>(initialState);\n\n  useEffect(() => {\n    dispatch(getCurrentProfile());\n\n    if (profile) {\n      setFormData({\n        company: loading || !profile.company ? '' : profile.company,\n        website: loading || !profile.website ? '' : profile.website,\n        location: loading || !profile.location ? '' : profile.location,\n        status: loading || !profile.status ? '' : profile.status,\n        skills: loading || !profile.skills ? '' : profile.skills,\n        githubusername:\n          loading || !profile.githubusername ? '' : profile.githubusername,\n        bio: loading || !profile.bio ? '' : profile.bio,\n        twitter: loading || !profile.twitter ? '' : profile.twitter,\n        facebook: loading || !profile.facebook ? '' : profile.facebook,\n        linkedin: loading || !profile.linkedin ? '' : profile.linkedin,\n        youtube: loading || !profile.youtube ? '' : profile.youtube,\n        instagram: loading || !profile.instagram ? '' : profile.instagram,\n      });\n    }\n  }, [dispatch, loading]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const [displaySocialInputs, toggleSocialInputs] = useState<boolean>(false);\n  const onChange = (\n    e: React.ChangeEvent<\n      HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement\n    >\n  ) => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    dispatch(createProfile(formData, true, props));\n  };\n\n  return (\n    <>\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={onChange}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\">\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Company\"\n            name=\"company\"\n            value={company}\n            onChange={onChange}\n          />\n          <small className=\"form-text\">\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Website\"\n            name=\"website\"\n            value={website}\n            onChange={onChange}\n          />\n          <small className=\"form-text\">\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            value={location}\n            onChange={onChange}\n          />\n          <small className=\"form-text\">\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Skills\"\n            name=\"skills\"\n            value={skills}\n            onChange={onChange}\n          />\n          <small className=\"form-text\">\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername}\n            onChange={onChange}\n          />\n          <small className=\"form-text\">\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            placeholder=\"A short bio of yourself\"\n            name=\"bio\"\n            value={bio}\n            onChange={onChange}\n          ></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n        {displaySocialInputs && (\n          <>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Twitter URL\"\n                name=\"twitter\"\n                value={twitter}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Facebook URL\"\n                name=\"facebook\"\n                value={facebook}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"YouTube URL\"\n                name=\"youtube\"\n                value={youtube}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Linkedin URL\"\n                name=\"linkedin\"\n                value={linkedin}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Instagram URL\"\n                name=\"instagram\"\n                value={instagram}\n                onChange={onChange}\n              />\n            </div>\n          </>\n        )}\n\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { addExperience } from '../../modules/profile';\n\ninterface Props extends RouteComponentProps {}\n\nexport type ExpFormData = {\n  company: string;\n  title: string;\n  location: string;\n  from: string;\n  to: string;\n  current: boolean;\n  description: string;\n};\n\nexport const AddExperience: React.FC<Props> = (props) => {\n  const [formData, setFormData] = useState<ExpFormData>({\n    company: '',\n    title: '',\n    location: '',\n    from: '',\n    to: '',\n    current: false,\n    description: '',\n  });\n\n  const [toDateDisabled, toggleDisabled] = useState<boolean>(false);\n  const { company, title, location, from, to, current, description } = formData;\n  const dispatch = useDispatch();\n\n  const onChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    dispatch(addExperience(formData, props));\n  };\n\n  return (\n    <>\n      <h1 className=\"large text-primary\">Add An Experience</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-code-branch\"></i> Add any developer/programming\n        positions that you have had in the past\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <input\n            onChange={onChange}\n            value={title}\n            type=\"text\"\n            placeholder=\"* Job Title\"\n            name=\"title\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            onChange={onChange}\n            value={company}\n            type=\"text\"\n            placeholder=\"* Company\"\n            name=\"company\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            onChange={onChange}\n            value={location}\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <h4>From Date</h4>\n          <input onChange={onChange} value={from} type=\"date\" name=\"from\" />\n        </div>\n        <div className=\"form-group\">\n          <p>\n            <input\n              onChange={() => {\n                setFormData({ ...formData, current: !current });\n                toggleDisabled(!toDateDisabled);\n              }}\n              type=\"checkbox\"\n              name=\"current\"\n              checked={current}\n              value={current ? 1 : 0}\n            />{' '}\n            Current Job\n          </p>\n        </div>\n        <div className=\"form-group\">\n          <h4>To Date</h4>\n          <input\n            onChange={onChange}\n            value={to}\n            type=\"date\"\n            name=\"to\"\n            disabled={toDateDisabled}\n          />\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            name=\"description\"\n            // cols=\"30\"\n            // rows=\"5\"\n            placeholder=\"Job Description\"\n            onChange={onChange}\n            value={description}\n          ></textarea>\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { addEducation } from '../../modules/profile';\n\ninterface Props extends RouteComponentProps {}\n\nexport type EduFormData = {\n  school: string;\n  degree: string;\n  fieldofstudy: string;\n  from: string;\n  to: string;\n  current: boolean;\n  description: string;\n};\n\nexport const AddEducation: React.FC<Props> = (props) => {\n  const [formData, setFormData] = useState<EduFormData>({\n    school: '',\n    degree: '',\n    fieldofstudy: '',\n    from: '',\n    to: '',\n    current: false,\n    description: '',\n  });\n\n  const [toDateDisabled, toggleDisabled] = useState<boolean>(false);\n  const {\n    school,\n    degree,\n    fieldofstudy,\n    from,\n    to,\n    current,\n    description,\n  } = formData;\n  const dispatch = useDispatch();\n\n  const onChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    dispatch(addEducation(formData, props));\n  };\n\n  return (\n    <>\n      <h1 className=\"large text-primary\">Add Your Education</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-graduation-cap\"></i> Add any school, bootcamp, etc\n        that you have attended\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <input\n            onChange={onChange}\n            value={school}\n            type=\"text\"\n            placeholder=\"* School or Bootcamp\"\n            name=\"school\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            onChange={onChange}\n            value={degree}\n            type=\"text\"\n            placeholder=\"* Degree or Certificate\"\n            name=\"degree\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            onChange={onChange}\n            value={fieldofstudy}\n            type=\"text\"\n            placeholder=\"Field Of Study\"\n            name=\"fieldofstudy\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <h4>From Date</h4>\n          <input onChange={onChange} value={from} type=\"date\" name=\"from\" />\n        </div>\n        <div className=\"form-group\">\n          <p>\n            <input\n              onChange={() => {\n                setFormData({ ...formData, current: !current });\n                toggleDisabled(!toDateDisabled);\n              }}\n              type=\"checkbox\"\n              name=\"current\"\n              value={current ? 1 : 0}\n            />{' '}\n            Current School or Bootcamp\n          </p>\n        </div>\n        <div className=\"form-group\">\n          <h4>To Date</h4>\n          <input\n            onChange={onChange}\n            value={to}\n            type=\"date\"\n            name=\"to\"\n            disabled={toDateDisabled}\n          />\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            name=\"description\"\n            // cols=\"30\"\n            // rows=\"5\"\n            placeholder=\"Program Description\"\n            onChange={onChange}\n            value={description}\n          ></textarea>\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface Props {\n  profile: any;\n}\n\nexport const ProfileItem: React.FC<Props> = ({ profile }) => {\n  const {\n    user: { _id, name, avatar },\n    status,\n    company,\n    location,\n    skills,\n  } = profile;\n  return (\n    <div className=\"profile bg-light\">\n      <img src={avatar} alt=\"\" className=\"round-img\" />\n      <div>\n        <h2>{name}</h2>\n        <p>\n          {status} {company && <span> at {company}</span>}\n        </p>\n        <p className=\"my-1\">{location && <span>{location}</span>}</p>\n        <Link to={`/profile/${_id}`} className=\"btn btn-primary\">\n          View Profile\n        </Link>\n      </div>\n      <ul>\n        {skills.slice(0, 4).map((skill: string, index: number) => (\n          <li key={index} className=\"text-primary\">\n            <i className=\"fas fa-check\"></i>\n            {skill}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { rootState } from '../../modules';\nimport { getProfiles } from '../../modules/profile';\nimport { Spinner } from '../layout/Spinner';\nimport { ProfileItem } from './ProfileItem';\n\ninterface Props {}\n\nexport const Profiles: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const { loading, profiles } = useSelector(\n    (state: rootState) => state.profile\n  );\n\n  useEffect(() => {\n    dispatch(getProfiles());\n  }, [dispatch]);\n\n  return (\n    <>\n      <>\n        {loading ? (\n          <Spinner />\n        ) : (\n          <>\n            <h1 className=\"large text-primary\">Developers</h1>\n            <p className=\"lead\">\n              <i className=\"fab fa-connectdevelop\" /> Browse and connect with\n              developers\n            </p>\n            <div className=\"profiles\">\n              {profiles.length > 0 ? (\n                profiles.map((profile: any) => (\n                  <ProfileItem key={profile._id} profile={profile} />\n                ))\n              ) : (\n                <h4>No profiles found...</h4>\n              )}\n            </div>\n          </>\n        )}\n      </>\n    </>\n  );\n};\n","import React from 'react';\nimport { Profile } from '../../modules/profile';\n\ninterface Props {\n  profile: Profile;\n}\n\nexport const ProfileAbout: React.FC<Props> = ({ profile }) => {\n  const { bio, skills, user } = profile;\n  const { name } = user;\n  return (\n    <div className=\"profile-about bg-light p-2\">\n      {bio && (\n        <>\n          <h2 className=\"text-primary\">{name.trim().split(' ')[0]}'s Bio</h2>\n          <p>{bio}</p>\n        </>\n      )}\n      <div className=\"line\"></div>\n      <h2 className=\"text-primary\">Skill Set</h2>\n      <div className=\"skills\">\n        {skills.map((skill: string, index: number) => (\n          <div className=\"p-1\" key={index}>\n            <i className=\"fas fa-check\"></i>\n            {skill}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport Moment from 'react-moment';\nimport { Education } from '../../modules/profile';\n\ninterface Props {\n  education: Education;\n}\n\nexport const ProfileEducation: React.FC<Props> = ({ education }) => {\n  const { school, degree, fieldofstudy, to, from, description } = education;\n  return (\n    <div className=\"ProfileEducation\">\n      <h3 className=\"text-dark\">{school}</h3>\n      <p>\n        <Moment format=\"YYYY/MM/DD\">{from}</Moment> -{' '}\n        {!to ? ' Now' : <Moment format=\"YYYY/MM/DD\">{to}</Moment>}\n      </p>\n      <p>\n        <strong>Degree : </strong>\n        {degree}\n      </p>\n      <p>\n        <strong>Field of Study : </strong>\n        {fieldofstudy}\n      </p>\n      <p>\n        <strong>Description: </strong>\n        {description}\n      </p>\n    </div>\n  );\n};\n","import React from 'react';\nimport Moment from 'react-moment';\nimport { Experience } from '../../modules/profile';\n\ninterface Props {\n  experience: Experience;\n}\n\nexport const ProfileExperience: React.FC<Props> = ({ experience }) => {\n  const { company, title, to, from, description } = experience;\n  return (\n    <div className=\"ProfileExperience\">\n      <h3 className=\"text-dark\">{company}</h3>\n      <p>\n        <Moment format=\"YYYY/MM/DD\">{from}</Moment> -{' '}\n        {!to ? ' Now' : <Moment format=\"YYYY/MM/DD\">{to}</Moment>}\n      </p>\n      <p>\n        <strong>Position : </strong>\n        {title}\n      </p>\n      <p>\n        <strong>Description: </strong>\n        {description}\n      </p>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { rootState } from '../../modules';\nimport { getGithubRepos } from '../../modules/profile';\nimport { Spinner } from '../layout/Spinner';\n\ninterface Props {\n  username: string;\n}\n\nexport const ProfileGithub: React.FC<Props> = ({ username }) => {\n  const dispatch = useDispatch();\n  const repos = useSelector((state: rootState) => state.profile.repos);\n\n  useEffect(() => {\n    dispatch(getGithubRepos(username));\n  }, [dispatch, username]);\n\n  return (\n    <div className=\"profile-github\">\n      <h2 className=\"text-primary my-1\">Github Repos</h2>\n      {repos === null ? (\n        <Spinner />\n      ) : (\n        repos.map((repos: any) => (\n          <div key={repos.id} className=\"repo bg-white p-1 my-1\">\n            <div>\n              <h4>\n                <a\n                  href={repos.html_url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {repos.name}\n                </a>\n              </h4>\n              <p>{repos.description}</p>\n            </div>\n            <div>\n              <ul>\n                <li className=\"badge badge-primary\">\n                  Stars:{repos.stargazers_count}\n                </li>\n                <li className=\"badge badge-primary\">\n                  Watchers:{repos.watchers_count}\n                </li>\n                <li className=\"badge badge-primary\">\n                  Forks:{repos.forks_count}\n                </li>\n              </ul>\n            </div>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Profile } from '../../modules/profile';\n\ninterface Props {\n  profile: Profile;\n}\n\nexport const ProfileTop: React.FC<Props> = ({ profile }) => {\n  const {\n    status,\n    company,\n    location,\n    website,\n    social,\n    user: { name, avatar },\n  } = profile;\n  return (\n    <div className=\"profile-top bg-primary p-2\">\n      <img className=\"round-img my-1\" src={avatar} alt=\"\" />\n      <h1 className=\"large\">{name}</h1>\n      <p className=\"lead\">\n        {status} {company && <span>at {company}</span>}\n      </p>\n      <p>{location && <span>{location}</span>}</p>\n      <div className=\"icons my-1\">\n        {website && (\n          <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fas fa-globe fa-2x\"></i>\n          </a>\n        )}\n        {social && social.twitter && (\n          <a href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-twitter fa-2x\"></i>\n          </a>\n        )}\n\n        {social && social.facebook && (\n          <a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-facebook fa-2x\"></i>\n          </a>\n        )}\n        {social && social.linkedin && (\n          <a href={social.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-linkedin fa-2x\"></i>\n          </a>\n        )}\n        {social && social.youtube && (\n          <a href={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-youtube fa-2x\"></i>\n          </a>\n        )}\n        {social && social.instagram && (\n          <a href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-instagram fa-2x\"></i>\n          </a>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { rootState } from '../../modules';\nimport { Education, Experience, getProfileById } from '../../modules/profile';\nimport { Spinner } from '../layout/Spinner';\nimport { ProfileAbout } from './ProfileAbout';\nimport { ProfileEducation } from './ProfileEducation';\nimport { ProfileExperience } from './ProfileExperience';\nimport { ProfileGithub } from './ProfileGithub';\nimport { ProfileTop } from './ProfileTop';\n\ninterface MatchParams {\n  id: string;\n}\n\nexport const Profile: React.FC<RouteComponentProps<MatchParams>> = ({\n  match,\n}) => {\n  const dispatch = useDispatch();\n  const { profile, loading } = useSelector((state: rootState) => state.profile);\n  const auth = useSelector((state: rootState) => state.auth);\n\n  useEffect(() => {\n    dispatch(getProfileById(match.params.id));\n  }, [dispatch, match]);\n\n  return (\n    <>\n      {profile === null || loading ? (\n        <Spinner />\n      ) : (\n        <>\n          <Link to=\"/profiles\" className=\"btn btn-light\">\n            Back To Profiles\n          </Link>\n          {auth.isAuthenticated &&\n            auth.loading === false &&\n            auth.user._id === profile.user!._id && (\n              <Link to=\"/edit-profile\" className=\"btn btn-dark\">\n                Edit Profile\n              </Link>\n            )}\n          <div className=\"profile-grid my-1\">\n            <ProfileTop profile={profile} />\n            <ProfileAbout profile={profile} />\n            <div className=\"profile-exp bg-white p-2\">\n              <h2 className=\"text-primary\">Experience</h2>\n              {profile.experience.length > 0 ? (\n                <>\n                  {profile.experience.map((exp: Experience) => (\n                    <ProfileExperience key={exp._id} experience={exp} />\n                  ))}\n                </>\n              ) : (\n                <h4>No experience credentials</h4>\n              )}\n            </div>\n            <div className=\"profile-edu bg-white p-2\">\n              <h2 className=\"text-primary\">Education</h2>\n              {profile.education.length > 0 ? (\n                <>\n                  {profile.education.map((edu: Education) => (\n                    <ProfileEducation key={edu._id} education={edu} />\n                  ))}\n                </>\n              ) : (\n                <h4>No Edcuation credentials</h4>\n              )}\n            </div>\n            {profile.githubusername && (\n              <ProfileGithub username={profile.githubusername} />\n            )}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n","import axios from '../axios';\nimport { ThunkAction } from 'redux-thunk';\nimport { rootState } from '.';\nimport { setAlert } from './alert';\n\nconst GET_POSTS = 'GET_POSTS' as const;\nconst POST_ERROR = 'POST_ERROR' as const;\nconst UPDATE_LIKES = 'UPDATE_LIKES' as const;\nconst DELETE_POST = 'DELETE_POST' as const;\nconst ADD_POST = 'ADD_POST' as const;\nconst GET_POST = 'GET_POST' as const;\nconst ADD_COMMENT = 'ADD_COMMENT' as const;\nconst REMOVE_COMMENT = 'REMOVE_COMMENT' as const;\n\ntype PostAction =\n  | { type: typeof GET_POSTS; payload: any }\n  | { type: typeof POST_ERROR; payload: any }\n  | { type: typeof UPDATE_LIKES; payload: any }\n  | { type: typeof DELETE_POST; payload: string }\n  | { type: typeof ADD_POST; payload: Post }\n  | { type: typeof GET_POST; payload: Post }\n  | { type: typeof ADD_COMMENT; payload: Comment }\n  | { type: typeof REMOVE_COMMENT; payload: string };\n\nexport type Like = {\n  _id: string;\n  user: string;\n};\n\nexport type Comment = {\n  _id: string;\n  user: string;\n  name: string;\n  text: string;\n  avatar: string;\n  date: string;\n};\n\nexport type Post = {\n  _id: string;\n  text: string;\n  name: string;\n  avatar: string;\n  user: string;\n  likes: Like[];\n  comments: Comment[];\n  date: string;\n};\n\nexport type PostState = {\n  posts: Post[];\n  post: Post | null;\n  loading: boolean;\n  error: any;\n};\n\nconst initialState: PostState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {},\n};\n\n/* Actions */\n// Get posts\nexport const getPosts = (): ThunkAction<\n  void,\n  rootState,\n  null,\n  PostAction\n> => async (dispatch) => {\n  try {\n    const res = await axios.get('/post');\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Add like\nexport const addLike = (\n  post_id: string\n): ThunkAction<void, rootState, null, PostAction> => async (dispatch) => {\n  try {\n    const res = await axios.put(`/post/like/${post_id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { post_id, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Remove like\nexport const removeLike = (\n  post_id: string\n): ThunkAction<void, rootState, null, PostAction> => async (dispatch) => {\n  try {\n    const res = await axios.put(`/post/unlike/${post_id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { post_id, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Delete post\nexport const deletePost = (\n  post_id: string\n): ThunkAction<void, rootState, null, PostAction> => async (dispatch) => {\n  try {\n    await axios.delete(`/post/${post_id}`);\n\n    dispatch({\n      type: DELETE_POST,\n      payload: post_id,\n    });\n\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Add post\nexport const addPost = (formData: {\n  text: string;\n}): ThunkAction<void, rootState, null, PostAction> => async (dispatch) => {\n  try {\n    const res = await axios.post(`/post`, formData);\n\n    dispatch({\n      type: ADD_POST,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Get post\nexport const getPost = (\n  post_id: string\n): ThunkAction<void, rootState, null, PostAction> => async (dispatch) => {\n  try {\n    const res = await axios.get(`/post/${post_id}`);\n\n    dispatch({\n      type: GET_POST,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Add comment\nexport const addComment = (\n  post_id: string,\n  formData: {\n    text: string;\n  }\n): ThunkAction<void, rootState, null, PostAction> => async (dispatch) => {\n  try {\n    const res = await axios.put(`/post/comment/${post_id}`, formData);\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Delete comment\nexport const deleteComment = (\n  post_id: string,\n  comment_id: string\n): ThunkAction<void, rootState, null, PostAction> => async (dispatch) => {\n  try {\n    await axios.delete(`/post/comment/${post_id}/${comment_id}`);\n\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: comment_id,\n    });\n\n    dispatch(setAlert('Comment Removed', 'success'));\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n/* Reducer */\nconst postReducer = (state: PostState = initialState, action: PostAction) => {\n  switch (action.type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: action.payload,\n        loading: false,\n      };\n    case GET_POST:\n      return {\n        ...state,\n        post: action.payload,\n        loading: false,\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [action.payload, ...state.posts],\n        loading: false,\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === action.payload.post_id\n            ? { ...post, likes: action.payload.likes }\n            : post\n        ),\n        loading: false,\n      };\n    case DELETE_POST:\n      console.log('Delete post reducer');\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== action.payload),\n        loading: false,\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case ADD_COMMENT:\n      return {\n        ...state,\n        loading: false,\n        post: { ...state.post, comments: action.payload },\n      };\n    case REMOVE_COMMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: state.post?.comments.filter(\n            (comment) => comment._id !== action.payload\n          ),\n        },\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addPost } from '../../modules/post';\n\ninterface Props {}\n\nexport const PostForm: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const [text, setText] = useState<string>('');\n\n  const onChange = (e: React.ChangeEvent<HTMLTextAreaElement>) =>\n    setText(e.target.value);\n  const onSubmit = (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    dispatch(addPost({ text }));\n    setText('');\n  };\n  return (\n    <div className=\"post-form\">\n      <div className=\"bg-primary p\">\n        <h3>Say Something...</h3>\n      </div>\n      <form className=\"form my-1\" onSubmit={onSubmit}>\n        <textarea\n          name=\"text\"\n          //   cols=\"30\"\n          //   rows=\"5\"\n          placeholder=\"Create a post\"\n          required\n          value={text}\n          onChange={onChange}\n        ></textarea>\n        <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\nimport Moment from 'react-moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { rootState } from '../../modules';\nimport { addLike, deletePost, Post, removeLike } from '../../modules/post';\n\ninterface Props {\n  post: Post;\n  showActions: boolean;\n}\n\nexport const PostItem: React.FC<Props> = ({ post, showActions = true }) => {\n  const dispatch = useDispatch();\n  const auth = useSelector((state: rootState) => state.auth);\n  const { _id, text, name, avatar, user, likes, comments, date } = post;\n\n  return (\n    <div className=\"post bg-white p-1 my-1\">\n      <div>\n        <Link to={`/profile/${user}`}>\n          <img className=\"round-img\" src={avatar} alt=\"\" />\n          <h4>{name}</h4>\n        </Link>\n      </div>\n      <div>\n        <p className=\"my-1\">{text}</p>\n        <p className=\"post-date\">\n          Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\n        </p>\n\n        {showActions && (\n          <>\n            <button\n              type=\"button\"\n              className=\"btn btn-light\"\n              onClick={() => dispatch(addLike(_id))}\n            >\n              <i className=\"fas fa-thumbs-up\"></i>{' '}\n              <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-light\"\n              onClick={() => dispatch(removeLike(_id))}\n            >\n              <i className=\"fas fa-thumbs-down\"></i>\n            </button>\n            <Link to={`/post/${_id}`} className=\"btn btn-primary\">\n              Discussion{' '}\n              {comments.length > 0 && (\n                <span className=\"comment-count\">{comments.length}</span>\n              )}\n            </Link>\n            {!auth.loading && user === auth.user._id && (\n              <button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                onClick={() => dispatch(deletePost(_id))}\n              >\n                <i className=\"fas fa-times\"></i>\n              </button>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { rootState } from '../../modules';\nimport { getPosts, Post } from '../../modules/post';\nimport { Spinner } from '../layout/Spinner';\nimport { PostForm } from './PostForm';\nimport { PostItem } from './PostItem';\n\ninterface Props {}\n\nexport const Posts: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const { posts, loading } = useSelector((state: rootState) => state.post);\n\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch]);\n  return loading ? (\n    <Spinner />\n  ) : (\n    <>\n      <h1 className=\"larget text-primary\">Posts</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i>Welcome to the community\n      </p>\n      <PostForm />\n      <div className=\"posts\">\n        {posts.map((post: Post) => (\n          <PostItem key={post._id} post={post} showActions={true} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addComment } from '../../modules/post';\n\ninterface Props {\n  post_id: string;\n}\n\nexport const CommentForm: React.FC<Props> = ({ post_id }) => {\n  const [text, setText] = useState('');\n  const dispatch = useDispatch();\n\n  const onChange = (e: React.ChangeEvent<HTMLTextAreaElement>) =>\n    setText(e.target.value);\n  const onSubmit = (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    dispatch(addComment(post_id, { text }));\n    setText('');\n  };\n  return (\n    <div className=\"post-form\">\n      <div className=\"bg-primary p\">\n        <h3>Leave a Comment</h3>\n      </div>\n      <form className=\"form my-1\" onSubmit={onSubmit}>\n        <textarea\n          name=\"text\"\n          //   cols=\"30\"\n          //   rows=\"5\"\n          placeholder=\"Create a comment\"\n          required\n          value={text}\n          onChange={onChange}\n        ></textarea>\n        <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\nimport Moment from 'react-moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { rootState } from '../../modules';\nimport { Comment, deleteComment } from '../../modules/post';\n\ninterface Props {\n  post_id: string;\n  comment: Comment;\n}\n\nexport const CommentItem: React.FC<Props> = ({ post_id, comment }) => {\n  const dispatch = useDispatch();\n  const { _id, text, name, avatar, user, date } = comment;\n  const auth = useSelector((state: rootState) => state.auth);\n  return (\n    <div className=\"post bg-white p-1 my-1\">\n      <div>\n        <Link to={`/profile/${user}`}>\n          <img className=\"round-img\" src={avatar} alt=\"\" />\n          <h4>{name}</h4>\n        </Link>\n      </div>\n      <div>\n        <p className=\"my-1\">{text}</p>\n        <p className=\"post-date\">\n          Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\n        </p>\n        {!auth.loading && user === auth.user._id && (\n          <button\n            onClick={() => dispatch(deleteComment(post_id, _id))}\n            type=\"button\"\n            className=\"btn btn-danger\"\n          >\n            <i className=\"fas fa-times\"></i>\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { rootState } from '../../modules';\nimport { getPost } from '../../modules/post';\nimport { Spinner } from '../layout/Spinner';\nimport { CommentForm } from './CommentForm';\nimport { CommentItem } from './CommentItem';\nimport { PostItem } from './PostItem';\n\ninterface MatchParams {\n  post_id: string;\n}\n\nexport const Post: React.FC<RouteComponentProps<MatchParams>> = ({ match }) => {\n  const dispatch = useDispatch();\n  const { post, loading } = useSelector((state: rootState) => state.post);\n\n  useEffect(() => {\n    dispatch(getPost(match.params.post_id));\n  }, [dispatch, match.params.post_id]);\n\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <>\n      <Link to=\"/posts\" className=\"btn\">\n        Back To Posts\n      </Link>\n      <PostItem post={post} showActions={false} />\n      <CommentForm post_id={post._id} />\n      <div className=\"comments\">\n        {post.comments.map((comment) => (\n          <CommentItem key={comment._id} comment={comment} post_id={post._id} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Navbar } from './components/layout/Navbar';\nimport { Landing } from './components/layout/Landing';\nimport './App.css';\nimport { Register } from './components/auth/Register';\nimport { Login } from './components/auth/Login';\nimport { Alert } from './components/layout/Alert';\nimport setAuthToken from './utils/setAuthToken';\nimport { useDispatch } from 'react-redux';\nimport { loadUser } from './modules/auth';\nimport { Dashboard } from './components/dashboard/Dashboard';\nimport { PrivateRoute } from './components/routing/PrivateRoute';\nimport { CreateProfile } from './components/profile-forms/CreateProfile';\nimport { EditProfile } from './components/profile-forms/EditProfile';\nimport { AddExperience } from './components/profile-forms/AddExperience';\nimport { AddEducation } from './components/profile-forms/AddEducation';\nimport { Profiles } from './components/profiles/Profiles';\nimport { Profile } from './components/profile/Profile';\nimport { Posts } from './components/post/Posts';\nimport { Post } from './components/post/Post';\n\ninterface Props {}\n\nexport const App: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // check for token in local storage\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n    dispatch(loadUser());\n  }, [dispatch]);\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Route exact path=\"/devconnect\" component={Landing} />\n        <section className=\"container\">\n          <Alert />\n          <Switch>\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/profiles\" component={Profiles} />\n            <Route exact path=\"/profile/:id\" component={Profile} />\n\n            <PrivateRoute exact path=\"/dashboard\" Component={Dashboard} />\n            <PrivateRoute\n              exact\n              path=\"/create-profile\"\n              Component={CreateProfile}\n            />\n            <PrivateRoute exact path=\"/edit-profile\" Component={EditProfile} />\n            <PrivateRoute\n              exact\n              path=\"/add-experience\"\n              Component={AddExperience}\n            />\n            <PrivateRoute\n              exact\n              path=\"/add-education\"\n              Component={AddEducation}\n            />\n            <PrivateRoute exact path=\"/posts\" Component={Posts} />\n            <PrivateRoute exact path=\"/post/:post_id\" Component={Post} />\n          </Switch>\n        </section>\n      </div>\n    </Router>\n  );\n};\n","import { combineReducers } from 'redux';\nimport alert, { AlertState } from './alert';\nimport auth, { AuthState } from './auth';\nimport profile, { ProfileState } from './profile';\nimport post, { PostState } from './post';\n\nexport default combineReducers({\n  alert,\n  auth,\n  profile,\n  post,\n});\n\nexport type rootState = {\n  alert: AlertState[];\n  auth: AuthState;\n  profile: ProfileState;\n  post: PostState;\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport Thunk from 'redux-thunk';\nimport rootReducer from './modules';\n\nconst initialState = {};\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(Thunk))\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}