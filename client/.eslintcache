[{"/Users/dongjune/Documents/Web/devconnector/client/src/App.tsx":"1","/Users/dongjune/Documents/Web/devconnector/client/src/components/layout/Landing.tsx":"2","/Users/dongjune/Documents/Web/devconnector/client/src/components/layout/Navbar.tsx":"3","/Users/dongjune/Documents/Web/devconnector/client/src/components/auth/Register.tsx":"4","/Users/dongjune/Documents/Web/devconnector/client/src/components/auth/Login.tsx":"5","/Users/dongjune/Documents/Web/devconnector/client/src/store.tsx":"6","/Users/dongjune/Documents/Web/devconnector/client/src/modules/alert.ts":"7","/Users/dongjune/Documents/Web/devconnector/client/src/modules/index.ts":"8","/Users/dongjune/Documents/Web/devconnector/client/src/components/layout/Alert.tsx":"9","/Users/dongjune/Documents/Web/devconnector/client/src/modules/auth.ts":"10","/Users/dongjune/Documents/Web/devconnector/client/src/index.tsx":"11","/Users/dongjune/Documents/Web/devconnector/client/src/axios.ts":"12","/Users/dongjune/Documents/Web/devconnector/client/src/utils/setAuthToken.ts":"13","/Users/dongjune/Documents/Web/devconnector/client/src/components/Dashboard/Dashboard.tsx":"14","/Users/dongjune/Documents/Web/devconnector/client/src/components/routing/PrivateRoute.tsx":"15","/Users/dongjune/Documents/Web/devconnector/client/src/components/layout/Spinner.tsx":"16","/Users/dongjune/Documents/Web/devconnector/client/src/modules/profile.ts":"17","/Users/dongjune/Documents/Web/devconnector/client/src/components/profile-forms/CreateProfile.tsx":"18","/Users/dongjune/Documents/Web/devconnector/client/src/components/Dashboard/DashboardAction.tsx":"19","/Users/dongjune/Documents/Web/devconnector/client/src/components/profile-forms/EditProfile.tsx":"20","/Users/dongjune/Documents/Web/devconnector/client/src/components/profile-forms/AddExperience.tsx":"21","/Users/dongjune/Documents/Web/devconnector/client/src/components/profile-forms/AddEducation.tsx":"22","/Users/dongjune/Documents/Web/devconnector/client/src/components/dashboard/Dashboard.tsx":"23","/Users/dongjune/Documents/Web/devconnector/client/src/components/dashboard/DashboardAction.tsx":"24","/Users/dongjune/Documents/Web/devconnector/client/src/components/dashboard/Experience.tsx":"25","/Users/dongjune/Documents/Web/devconnector/client/src/components/dashboard/Education.tsx":"26","/Users/dongjune/Documents/Web/devconnector/client/src/components/profiles/Profiles.tsx":"27","/Users/dongjune/Documents/Web/devconnector/client/src/components/profiles/ProfileItem.tsx":"28"},{"size":2329,"mtime":1614071898010,"results":"29","hashOfConfig":"30"},{"size":1042,"mtime":1613652246116,"results":"31","hashOfConfig":"30"},{"size":1362,"mtime":1614071961748,"results":"32","hashOfConfig":"30"},{"size":2755,"mtime":1613633443268,"results":"33","hashOfConfig":"30"},{"size":1895,"mtime":1613633374306,"results":"34","hashOfConfig":"30"},{"size":345,"mtime":1613375623609,"results":"35","hashOfConfig":"30"},{"size":1254,"mtime":1613638273932,"results":"36","hashOfConfig":"30"},{"size":342,"mtime":1613650960905,"results":"37","hashOfConfig":"30"},{"size":458,"mtime":1613380158253,"results":"38","hashOfConfig":"30"},{"size":4419,"mtime":1614069355435,"results":"39","hashOfConfig":"30"},{"size":277,"mtime":1613369500068,"results":"40","hashOfConfig":"30"},{"size":184,"mtime":1613562587065,"results":"41","hashOfConfig":"30"},{"size":253,"mtime":1613567116321,"results":"42","hashOfConfig":"30"},{"size":1231,"mtime":1614057989300,"results":"43","hashOfConfig":"30"},{"size":632,"mtime":1613637600696,"results":"44","hashOfConfig":"30"},{"size":285,"mtime":1613636838871,"results":"45","hashOfConfig":"30"},{"size":9630,"mtime":1614071620760,"results":"46","hashOfConfig":"30"},{"size":7000,"mtime":1613729018743,"results":"47","hashOfConfig":"30"},{"size":653,"mtime":1613729845826,"results":"48","hashOfConfig":"30"},{"size":8160,"mtime":1613827104143,"results":"49","hashOfConfig":"30"},{"size":3517,"mtime":1614056460012,"results":"50","hashOfConfig":"30"},{"size":3568,"mtime":1614057864427,"results":"51","hashOfConfig":"30"},{"size":1651,"mtime":1614069757255,"results":"52","hashOfConfig":"30"},{"size":653,"mtime":1613729845826,"results":"53","hashOfConfig":"30"},{"size":1368,"mtime":1614069344576,"results":"54","hashOfConfig":"30"},{"size":1359,"mtime":1614069468946,"results":"55","hashOfConfig":"30"},{"size":1229,"mtime":1614073448778,"results":"56","hashOfConfig":"30"},{"size":947,"mtime":1614082467734,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yktwqe",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dongjune/Documents/Web/devconnector/client/src/App.tsx",[],"/Users/dongjune/Documents/Web/devconnector/client/src/components/layout/Landing.tsx",[],["117","118"],"/Users/dongjune/Documents/Web/devconnector/client/src/components/layout/Navbar.tsx",[],"/Users/dongjune/Documents/Web/devconnector/client/src/components/auth/Register.tsx",[],"/Users/dongjune/Documents/Web/devconnector/client/src/components/auth/Login.tsx",[],"/Users/dongjune/Documents/Web/devconnector/client/src/store.tsx",[],"/Users/dongjune/Documents/Web/devconnector/client/src/modules/alert.ts",[],"/Users/dongjune/Documents/Web/devconnector/client/src/modules/index.ts",[],"/Users/dongjune/Documents/Web/devconnector/client/src/components/layout/Alert.tsx",[],"/Users/dongjune/Documents/Web/devconnector/client/src/modules/auth.ts",[],"/Users/dongjune/Documents/Web/devconnector/client/src/index.tsx",[],"/Users/dongjune/Documents/Web/devconnector/client/src/axios.ts",[],"/Users/dongjune/Documents/Web/devconnector/client/src/utils/setAuthToken.ts",[],"/Users/dongjune/Documents/Web/devconnector/client/src/components/Dashboard/Dashboard.tsx",[],["119","120"],"/Users/dongjune/Documents/Web/devconnector/client/src/components/routing/PrivateRoute.tsx",[],"/Users/dongjune/Documents/Web/devconnector/client/src/components/layout/Spinner.tsx",[],"/Users/dongjune/Documents/Web/devconnector/client/src/modules/profile.ts",[],"/Users/dongjune/Documents/Web/devconnector/client/src/components/profile-forms/CreateProfile.tsx",[],"/Users/dongjune/Documents/Web/devconnector/client/src/components/Dashboard/DashboardAction.tsx",[],"/Users/dongjune/Documents/Web/devconnector/client/src/components/profile-forms/EditProfile.tsx",["121"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { rootState } from '../../modules';\nimport { createProfile, getCurrentProfile } from '../../modules/profile';\n\ninterface Props extends RouteComponentProps {}\n\nexport type FormData = {\n  company: string;\n  website: string;\n  location: string;\n  status: string;\n  skills: string;\n  githubusername: string;\n  bio: string;\n  twitter: string;\n  facebook: string;\n  linkedin: string;\n  youtube: string;\n  instagram: string;\n};\n\nconst initialState: FormData = {\n  company: '',\n  website: '',\n  location: '',\n  status: '',\n  skills: '',\n  githubusername: '',\n  bio: '',\n  twitter: '',\n  facebook: '',\n  linkedin: '',\n  youtube: '',\n  instagram: '',\n};\n\nexport const EditProfile: React.FC<Props> = (props) => {\n  const dispatch = useDispatch();\n  const { profile, loading } = useSelector((state: rootState) => state.profile);\n  const [formData, setFormData] = useState<FormData>(initialState);\n\n  useEffect(() => {\n    dispatch(getCurrentProfile());\n\n    if (profile) {\n      setFormData({\n        company: loading || !profile.company ? '' : profile.company,\n        website: loading || !profile.website ? '' : profile.website,\n        location: loading || !profile.location ? '' : profile.location,\n        status: loading || !profile.status ? '' : profile.status,\n        skills: loading || !profile.skills ? '' : profile.skills,\n        githubusername:\n          loading || !profile.githubusername ? '' : profile.githubusername,\n        bio: loading || !profile.bio ? '' : profile.bio,\n        twitter: loading || !profile.twitter ? '' : profile.twitter,\n        facebook: loading || !profile.facebook ? '' : profile.facebook,\n        linkedin: loading || !profile.linkedin ? '' : profile.linkedin,\n        youtube: loading || !profile.youtube ? '' : profile.youtube,\n        instagram: loading || !profile.instagram ? '' : profile.instagram,\n      });\n    }\n  }, [dispatch, loading]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const [displaySocialInputs, toggleSocialInputs] = useState<boolean>(false);\n  const onChange = (\n    e: React.ChangeEvent<\n      HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement\n    >\n  ) => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    dispatch(createProfile(formData, true, props));\n  };\n\n  return (\n    <>\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={onChange}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\">\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Company\"\n            name=\"company\"\n            value={company}\n            onChange={onChange}\n          />\n          <small className=\"form-text\">\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Website\"\n            name=\"website\"\n            value={website}\n            onChange={onChange}\n          />\n          <small className=\"form-text\">\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            value={location}\n            onChange={onChange}\n          />\n          <small className=\"form-text\">\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Skills\"\n            name=\"skills\"\n            value={skills}\n            onChange={onChange}\n          />\n          <small className=\"form-text\">\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername}\n            onChange={onChange}\n          />\n          <small className=\"form-text\">\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            placeholder=\"A short bio of yourself\"\n            name=\"bio\"\n            value={bio}\n            onChange={onChange}\n          ></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n        {displaySocialInputs && (\n          <>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Twitter URL\"\n                name=\"twitter\"\n                value={twitter}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Facebook URL\"\n                name=\"facebook\"\n                value={facebook}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"YouTube URL\"\n                name=\"youtube\"\n                value={youtube}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Linkedin URL\"\n                name=\"linkedin\"\n                value={linkedin}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Instagram URL\"\n                name=\"instagram\"\n                value={instagram}\n                onChange={onChange}\n              />\n            </div>\n          </>\n        )}\n\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </>\n  );\n};\n","/Users/dongjune/Documents/Web/devconnector/client/src/components/profile-forms/AddExperience.tsx",[],"/Users/dongjune/Documents/Web/devconnector/client/src/components/profile-forms/AddEducation.tsx",[],"/Users/dongjune/Documents/Web/devconnector/client/src/components/dashboard/Dashboard.tsx",[],"/Users/dongjune/Documents/Web/devconnector/client/src/components/dashboard/DashboardAction.tsx",[],"/Users/dongjune/Documents/Web/devconnector/client/src/components/dashboard/Experience.tsx",[],"/Users/dongjune/Documents/Web/devconnector/client/src/components/dashboard/Education.tsx",[],"/Users/dongjune/Documents/Web/devconnector/client/src/components/profiles/Profiles.tsx",[],"/Users/dongjune/Documents/Web/devconnector/client/src/components/profiles/ProfileItem.tsx",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"122","replacedBy":"126"},{"ruleId":"124","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":64,"column":6,"nodeType":"130","endLine":64,"endColumn":25,"suggestions":"131"},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],["132"],["133"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'profile'. Either include it or remove the dependency array.","ArrayExpression",["134"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},"Update the dependencies array to be: [dispatch, loading, profile]",{"range":"137","text":"138"},[2035,2054],"[dispatch, loading, profile]"]